<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Employee Management System</title>
    <style>
       
    </style>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <div class="main-content">
        <div class="sidebar">
            <div class="menu-header">≡ Menu</div>
            <div class="menu-item">Dashboard</div>
            <div class="menu-item">Employees</div>
            <div class="menu-item">Shifts</div>
            <div class="menu-item active">Reports</div>
        </div>

        <div class="header">
            Employee Management System
        </div>

        <div class="content">
            
            <!-- Add New Report Section -->
             <form id="add-report-form">
                <div class="report-section">
                    <div class="section-header">
                        <h2 class="section-title">Add New Report</h2>
                        <span class="collapse-icon">▼</span>
                    </div>
                    <div class="section-divider"></div>
                    <div class="section-content">
                        <div class="form-row">
                            <div class="form-group">
                                <label class="form-label">Report To</label>
                                <select name="manager" class="form-select">
                                    <option>--Select Manager--</option>
                                    <option>Manager 1</option>
                                    <option>Manager 2</option>
                                    <option>Manager 3</option>
                                </select>
                            </div>
                            <div class="form-group">
                                <label class="form-label">Method</label>
                                <select name="method" class="form-select">
                                    <option>--Select Method--</option>
                                    <option>Direct</option>
                                    <option>Indirect</option>
                                </select>
                            </div>
                        </div>
                        <button type="submit" class="btn btn-primary">SUBMIT</button>
                    </div>
                </div>
            </form>
            
            <!-- Copy Report Section -->
             <form id="copy-report-form">
                <div class="report-section">
                    <div class="section-header">
                        <h2 class="section-title">Copy Report</h2>
                        <span class="collapse-icon" style="transform: rotate(0deg)">▼</span>
                    </div>
                    <div class="section-divider" style="display: none;"></div>
                    <div class="section-content" style="display: none;">
                        <div class="form-row">
                            <div class="form-group">
                                <label class="form-label">Transfer To</label>
                                <select name="employee" class="form-select">
                                    <option>--Select Employee--</option>
                                    <option>Employee 1</option>
                                    <option>Employee 2</option>
                                    <option>Employee 3</option>
                                </select>
                            </div>
                            <div class="form-group">
                                <label class="form-label">Report To</label>
                                <select name="manager" class="form-select">
                                    <option>--Select Manager--</option>
                                    <option>Manager 1</option>
                                    <option>Manager 2</option>
                                    <option>Manager 3</option>
                                </select>
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group">
                                <label class="form-label">Method</label>
                                <select name="method" class="form-select">
                                    <option>--Select Method--</option>
                                    <option>Direct</option>
                                    <option>Indirect</option>
                                </select>
                            </div>
                        </div>
                        <button type="submit" class="btn btn-secondary">SUBMIT</button>
                    </div>
                </div>
            </form>


           <!-- Search Container -->
            <div class="search-container">
                <input type="text" id="searchInput" class="search-box" placeholder="Search...">
            </div>


            
            <!-- Employee Details Container -->
             <div class="employee-container" id="employeeTable">
                <div class="employee-header">
                    <h2>Employees</h2>
                    <button class="download-btn"> ⤓ Download Report</button>
                </div>
                <div class="section-divider"></div>
                <div class="records-info"><span id="record-count">Records found: 0</span></div>
                <div class="table-container">
                    <table class="employee-table">
                        <thead>
                            <tr>
                                <th><input type="checkbox" id="selectAll" class="checkbox"></th>
                                <th>Sl No</th>
                                <th>Employee ID</th>
                                <th>First Name</th>
                                <th>Last Name</th>
                                <th>Department</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td><input type="checkbox" class="checkbox"></td>
                                <td>1</td>
                                <td class="employee-id">0001</td>
                                <td>Admin</td>
                                <td>AWGTC</td>
                                <td>ABC</td>
                            </tr>
                            <tr>
                                <td><input type="checkbox" class="checkbox"></td>
                                <td>2</td>
                                <td class="employee-id">0002</td>
                                <td>Admin 1</td>
                                <td>AWGTC (1)</td>
                                <td>ABC</td>
                            </tr>
                            <tr>
                                <td><input type="checkbox" class="checkbox"></td>
                                <td>3</td>
                                <td class="employee-id">0003</td>
                                <td>Emp</td>
                                <td>Loy</td>
                                <td>abc</td>
                            </tr>
                            <!-- More employee data can be added here -->
                             
                             <script>
                             document.addEventListener("DOMContentLoaded", function () {
                                const searchInput = document.getElementById("searchInput");
                                const table = document.getElementById("employeeTable");
                                const recordCount = document.getElementById("record-count");
                                
                                // Reference to the "no records" message element
                                const noRecordsMessage = document.getElementById("no-records");
                                function updateTableAndCount() {
                                    const searchValue = searchInput.value.toLowerCase();
                                    const rows = table.querySelectorAll("tbody tr");
                                    let visibleCount = 0;
                                    rows.forEach(row => {
                                        const rowText = row.textContent.toLowerCase();
                                        const match = rowText.includes(searchValue);
                                        if (match) {
                                            row.style.display = "";
                                            visibleCount++;
                                        } else {
                                            row.style.display = "none";
                                        }
                                    });
                                    recordCount.textContent = `(${visibleCount})Records found`;
                                    
                                    // Show or hide the "No records found" message
                                    if (noRecordsMessage) {
                                        noRecordsMessage.style.display = visibleCount === 0 ? "block" : "none";
                                    }
                                }
                                
                                updateTableAndCount(); // Initial call
                                searchInput.addEventListener("input", updateTableAndCount);
                                });
                            </script>

                        </tbody>
                    </table>
                    <div id="no-records" class="empty-state" style="display: none;">
                        <div class="empty-state-icon">😕</div>
                        <div>No records found.</div>
                    </div>

                </div>
            </div>
        </div>
    </div>
    
    
    <script>
    // Add interactivity for collapsible sections
    document.querySelectorAll('.section-header').forEach(header => {
        header.addEventListener('click', function() {
            const icon = this.querySelector('.collapse-icon');
            const divider = this.nextElementSibling
            const content = divider.nextElementSibling;
            
            if (content.style.display === 'none') {
                content.style.display = 'block';
                divider.style.display= 'block';
                icon.style.transform = 'rotate(180deg)';
            } else {
                content.style.display = 'none';
                divider.style.display= 'none';
                icon.style.transform = 'rotate(0deg)';
            }
        });
    });


    // Add hover effects for menu items
    document.querySelectorAll('.menu-item:not(.active)').forEach(item => {
        item.addEventListener('click', function() {
            document.querySelector('.menu-item.active').classList.remove('active');
            this.classList.add('active');
        });
    });
    

    // Employee table functionality
    // Select all checkbox functionality with row highlighting
    const selectAllCheckbox = document.getElementById('selectAll');
    const rowCheckboxes = document.querySelectorAll('.employee-table tbody input[type="checkbox"]');
    
    selectAllCheckbox.addEventListener('change', function () {
        rowCheckboxes.forEach(checkbox => {
            checkbox.checked = this.checked;
            const row = checkbox.closest('tr');
            if (this.checked) {
                row.classList.add('selected');
            } else {
                row.classList.remove('selected');
            }
        });
    });


    // Individual checkbox functionality for row highlighting
    rowCheckboxes.forEach(checkbox => {
        checkbox.addEventListener('change', function () {
            const row = this.closest('tr');
            if (this.checked) {
                row.classList.add('selected');
            } else {
                row.classList.remove('selected');
            }
            
            // Update the "Select All" checkbox status
            const allChecked = Array.from(rowCheckboxes).every(cb => cb.checked);
            selectAllCheckbox.checked = allChecked;
        });
    });
    
    
    // Run on page load
    window.addEventListener('DOMContentLoaded', updateRecordsCount);
    
    function getSelectedEmployeeIDs() {
        const selected = [];
        document.querySelectorAll('.employee-table tbody input[type="checkbox"]:checked').forEach(cb => {
            const row = cb.closest('tr');
            const empId = row.querySelector('.employee-id');
            if (empId) selected.push(empId.textContent.trim());
        });
        return selected;
    }
    
    document.getElementById('add-report-form').addEventListener('submit', function(e) {
        e.preventDefault();
        const employees = getSelectedEmployeeIDs();
        const manager = this.querySelector('select[name="manager"]').value;
        const method = this.querySelector('select[name="method"]').value;
        
        console.log('Submitting Add Report:', { manager, method, employees });
        
        // TODO: Send to backend using fetch or XMLHttpRequest
        alert('Add Report submitted with: ' + JSON.stringify({ manager, method, employees }));
    });
    
    document.getElementById('copy-report-form').addEventListener('submit', function(e) {
        e.preventDefault();
        const employees = getSelectedEmployeeIDs();
        const manager = this.querySelector('select[name="manager"]').value;
        const newmanager= this.querySelector('select[name="employee"]').value;
        const method = this.querySelector('select[name="method"]').value;
        
        console.log('Submitting Copy Report:', { newmanager, manager, method, employees });
        
        // TODO: Send to backend using fetch or XMLHttpRequest
        alert('Copy Report submitted with: ' + JSON.stringify({ newmanager, manager, method, employees }));
    });
    
   

    </script>
   <script>
document.addEventListener("DOMContentLoaded", function () {
    const rows = document.querySelectorAll(".employee-table tbody tr");
    const selectAll = document.getElementById("selectAll");

    function updateRowHighlight(checkbox) {
        const row = checkbox.closest("tr");
        row.classList.toggle("selected", checkbox.checked);
    }

    // Row click event (except checkbox)
    rows.forEach(row => {
        const checkbox = row.querySelector("input[type='checkbox']");
        
        row.addEventListener("click", function (e) {
            if (e.target.type !== "checkbox") {
                checkbox.checked = !checkbox.checked;
                updateRowHighlight(checkbox);
            }
        });

        checkbox.addEventListener("click", function (e) {
            e.stopPropagation(); // Prevent double-toggle from row click
            updateRowHighlight(checkbox);
        });
    });

    // Select All logic
    selectAll.addEventListener("change", function () {
        const checkboxes = document.querySelectorAll(".employee-table tbody input[type='checkbox']");
        checkboxes.forEach(cb => {
            cb.checked = this.checked;
            updateRowHighlight(cb);
        });
    });
});
</script>
<script>
function getSelectedEmployeeDetails() {
    const selected = [];
    document.querySelectorAll('.employee-table tbody input[type="checkbox"]:checked').forEach(cb => {
        const row = cb.closest('tr');
        const name = row.children[3].textContent.trim();
        const dept = row.children[5].textContent.trim();
        const id = row.querySelector('.employee-id').textContent.trim();
        selected.push(`${id}|${name} (${dept})`);

    });
    return selected;
}

function showModal(type, data) {
    const modal = document.getElementById("confirmationModal");
    const body = document.getElementById("modal-body");
    const title = document.getElementById("modal-title");
    const submitBtn = document.getElementById("modal-submit");

    title.textContent = type === "add" ? "Confirm Add Reporties" : "Confirm Copy Report";

    // Build the table HTML
    let tableRows = data.employees.map(emp => {
    const [idPart, rest] = emp.split('|');
    const [name, dept] = rest.split('(');
    return `<tr>
        <td>${idPart}</td>
        <td>${name.trim()}</td>
        <td>${dept.replace(')', '').trim()}</td>
    </tr>`;
}).join(""); 


    const tableHTML = `
        <table style="width: 100%; border-collapse: collapse;">
  <thead>
    <tr style="background-color: #f2f2f2;">
      <th style="padding: 8px; text-align: left;">ID</th>
      <th style="padding: 8px; text-align: left;">Employee Name</th>
      <th style="padding: 8px; text-align: left;">Department</th>
    </tr>
  </thead>
  <tbody>
    ${tableRows}
  </tbody>
</table>

    `;

    // Compose full modal content
    body.innerHTML = `
        <p><strong>Report To:</strong> ${data.manager}</p>
        ${type === "copy" ? `<p><strong>Transfer To:</strong> ${data.newmanager}</p>` : ""}
        <p><strong>Method:</strong> ${data.method}</p>
        <p><strong>Selected Employees:</strong></p>
        ${tableHTML}
    `;

    modal.style.display = "flex";

    submitBtn.onclick = function() {
        modal.style.display = "none";
        let alertMsg = `Submission Successful (${type === "add" ? "Add Reporties" : "Copy Report"})\n`;
        alertMsg += `Report To: ${data.manager}\n`;
        if (type === "copy") alertMsg += `Transfer To: ${data.newmanager}\n`;
        alertMsg += `Method: ${data.method}\n`;
        alertMsg += `Selected Employees:\n${data.employees.join("\n")}`;
        alert(alertMsg);
    };

    document.getElementById("modal-cancel").onclick = () => {
        modal.style.display = "none";
    };
}


document.getElementById('add-report-form').addEventListener('submit', function(e) {
    e.preventDefault();
    const employees = getSelectedEmployeeDetails();
    const manager = this.querySelector('select[name="manager"]').value;
    const method = this.querySelector('select[name="method"]').value;

    if (!manager || !method || employees.length === 0) {
        alert("Please fill all fields and select at least one employee.");
        return;
    }

    showModal("add", { manager, method, employees });
});

document.getElementById('copy-report-form').addEventListener('submit', function(e) {
    e.preventDefault();
    const employees = getSelectedEmployeeDetails();
    const newmanager = this.querySelector('select[name="employee"]').value;
    const manager = this.querySelector('select[name="manager"]').value;
    const method = this.querySelector('select[name="method"]').value;

    if (!newmanager || !manager || !method || employees.length === 0) {
        alert("Please fill all fields and select at least one employee.");
        return;
    }

    showModal("copy", { manager, method, newmanager, employees });
});
</script>

<!-- Confirmation Modal -->
<div id="confirmationModal" class="modal" style="display: none;">
  <div class="modal-content">
    <h3 id="modal-title"></h3>
    <div id="modal-body"></div>
    <div class="modal-actions">
      <button id="modal-submit" class="btn btn-primary">Submit</button>
      <button id="modal-cancel" class="btn btn-secondary">Cancel</button>
    </div>
  </div>
</div>

</body>
</html>




body{
  padding: 25px;
}
.title {
	color: #5C6AC4;
}* {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background-color: #f5f5f5;
            display: flex;
            min-height: 100vh;
        }

        .sidebar {
          position: fixed;
          top: 0;
          left: -50px;
          width: 250px;
          height: 100%;
          background-color: #ffffff;
          border-right: 1px solid #e0e0e0;
          padding: 0;
          border-radius: 50px;
          z-index: 2;
        }

        .menu-header {
            padding: 20px;
            font-weight: 600;
            color: #333;
            border-bottom: 1px solid #f0f0f0;
            margin-top: 0;
            margin-left: 50px;
        }

        .menu-item {
            padding: 12px 20px;
            color: #666;
            cursor: pointer;
            border-bottom: 1px solid #f8f8f8;
            transition: background-color 0.2s;
            margin-left: 50px;
        }

        .menu-item:hover {
            background-color: #f8f8f8;
        }

        .menu-item.active {
            background-color: #e8f5e8;
            color: #4CAF50;
            font-weight: 500;
        }

        .main-content {
            flex: 1;
            background-color: #f5f5f5;
        }

        .header {
          position: fixed;
          top: 0;
          left: 0;
          width: 100%;
          height:60px;
          background: linear-gradient(135deg, #4CAF50, #45a049);
          color: white;
          padding-top: 10px;
          text-align: center;
          font-size: 24px;
          font-weight: 600;
          box-shadow: 0 2px 4px rgba(0,0,0,0.1);
          z-index: 1;
        }

        .content {
          margin-left: 200px;
          margin-top: 60px;
          padding: 30px;
          max-width: 2000px;
        }

        .report-section {
            background: white;
            border-radius: 20px;
            margin-bottom: 30px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
            max-width: 1700px;
        }

        .section-header {
            padding: 20px 25px;
            background-color: #fafafa;
            display: flex;
            justify-content: space-between;
            align-items: center;
            border-radius: 20px;
        }

        .section-title {
            font-size: 18px;
            font-weight: 600;
            color: #333;
        }

        .collapse-icon {
            color: #4a4d4a;
            font-size: 20px;
            transform: rotate(180deg);
            transition: transform 0.2s;
            cursor: pointer;
        }

        .section-divider {
            height: 2px;
            background-color: #e0e0e0;
            margin: 20px;
            margin-top: 0;
            margin-bottom: 0;
        }

        .section-content {
            padding: 25px;
        }

        .form-row {
            display: flex;
            gap: 20px;
            margin-bottom: 20px;
            align-items: end;
        }

        .form-group {
            flex: 1;
        }

        .form-label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
            color: #333;
        }

        .form-select {
            width: 100%;
            padding: 12px 16px;
            border: 1px solid #ddd;
            border-radius: 6px;
            font-size: 14px;
            background-color: white;
            cursor: pointer;
            transition: border-color 0.2s, box-shadow 0.2s;
        }

        .form-select:focus {
            outline: none;
            border-color: #4CAF50;
            box-shadow: 0 0 0 3px rgba(76, 175, 80, 0.1);
        }

        .btn {
            padding: 12px 24px;
            border: none;
            border-radius: 6px;
            font-size: 14px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.2s;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .btn-primary {
            background-color: #4CAF50;
            color: white;
        }

        .btn-primary:hover {
            background-color: #45a049;
            transform: translateY(-1px);
            box-shadow: 0 4px 8px rgba(76, 175, 80, 0.3);
        }

        .btn-secondary {
            background-color: #4CAF50;
            color: white;
        }

        .btn-secondary:hover {
            background-color: #45a049;
            transform: translateY(-1px);
            box-shadow: 0 4px 8px rgba(76, 175, 80, 0.3);
        }

        /* Employee Details Container Styles */
        .employee-container {
            background: white;
            border-radius: 20px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
            overflow: hidden;
            margin-bottom: 30px;
            max-width: 1700px;
        }

        .employee-header {
            padding: 20px 25px;
            background-color: #fafafa;
            display: flex;
            justify-content: space-between;
            align-items: center;
            border-radius: 20px;
        }

        .employee-header h2 {
            font-size: 18px;
            font-weight: 600;
            color: #333;
            margin: 0;
        }

        .download-btn {
            background: rgba(255, 255, 255, 0.2);
            border: 1px solid rgba(255, 255, 255, 0.3);
            color: rgb(8, 8, 8);
            padding: 8px 16px;
            border-radius: 6px;
            cursor: pointer;
            font-size: 14px;
            transition: all 0.3s ease;
        }

        .download-btn:hover {
            background: rgba(255, 255, 255, 0.3);
        }

        .records-info {
            padding: 15px 25px;
            background: #fafafa;
            border-bottom: 1px solid #e9ecef;
            color: #6c757d;
            font-size: 14px;
        }

.table-container {
  overflow-x: auto;
  padding: 20px;
  background: #d4d4d4;
}

.employee-table {
    width: 100%;
    border-spacing: 0 12px; /* Row spacing */
    border-collapse: separate; /* Required for spacing to work */
}

.employee-table th {
    background: #d4d4d4;
    padding: 15px 20px;
    text-align: left;
    font-weight: 600;
    color: rgb(0, 0, 0);
    font-size: 14px;
    position: sticky;
    top: 0;
    border: none;
    z-index: 10;
}

.employee-table th:first-child {
    width: 60px;
    text-align: center;
}

.employee-table th .sort-icon {
    margin-left: 5px;
    color: white;
    font-size: 12px;
}

.employee-table td {
    padding: 16px 20px;
    background: #fff;
    color: #333;
    font-size: 14px;
    /* box-shadow: 0 4px 12px rgba(0,0,0,0.04); */
}

.employee-table tbody tr td:first-child {
    border-top-left-radius: 20px;
    border-bottom-left-radius: 20px;
    text-align: center;
}

.employee-table tbody tr td:last-child {
    border-top-right-radius: 20px;
    border-bottom-right-radius: 20px;
}

.employee-table tbody tr:hover td {
    background-color: #f1f1f1;
    transition: background-color 0.2s ease;
    cursor: pointer;
}

.employee-table tr.selected td {
    background-color: #45a049 !important; /* Light green */
    color: white;
    transition: background-color 0.3s ease;
}

.search-container {
    display: flex;
    justify-content: flex-end;
    padding: 10px 20px;
    background-color: #f7f6fb;  /* light lavender background */
    border-radius: 12px;
    margin-bottom: 10px;
}

.search-box {
    width: 280px;
    padding: 8px 14px;
    border-radius: 10px;
    border: 1px solid #ccc;
    outline: none;
    font-size: 14px;
    box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1);
}





/* Customize checkbox appearance */
.checkbox {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    width: 16px;
    height: 16px;
    border: 1px solid #e0e0e0;
    border-radius: 6px;
    cursor: pointer;
    position: relative;
    outline: none;
    background-color: #fff;
    transition: background-color 0.2s, border-color 0.2s;
}

.checkbox:checked {
    background-color: #4CAF50;
    border-color: #e0e0e0;
}

.checkbox:checked::after {
    content: '✔';
    color: white;
    position: absolute;
    font-size: 12px;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

.employee-id {
    font-family: 'Courier New', monospace;
    color: #4CAF50;
    font-weight: 500;
}

.empty-state {
    text-align: center;
    padding: 60px 20px;
    color: #6c757d;
    background: #fff;
    border-radius: 12px;
    margin: 12px;
}

.empty-state-icon {
    font-size: 48px;
    margin-bottom: 16px;
    opacity: 0.5;
}





.scroll-info {
            padding: 15px 25px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            border-top: 1px solid #e0e0e0;
            background: #fafafa;
            font-size: 14px;
            color: #6c757d;
        }

        .scroll-indicator {
            display: flex;
            align-items: center;
            gap: 10px;
            color: #4CAF50;
        }

        .scroll-indicator::after {
            content: "↕";
            font-size: 16px;
            animation: bounce 2s infinite;
        }

        @keyframes bounce {
            0%, 20%, 50%, 80%, 100% {
                transform: translateY(0);
            }
            40% {
                transform: translateY(-5px);
            }
            60% {
                transform: translateY(-3px);
            }
        }

        .modal {
  position: fixed;
  z-index: 9999;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0,0,0,0.4);
  display: flex;
  align-items: center;
  justify-content: center;
}

.modal-content {
  background-color: #fff;
  padding: 30px;
  border-radius: 12px;
  width: 500px;
  max-width: 90%;
  box-shadow: 0 2px 8px rgba(0,0,0,0.2);
}

.modal-content h3 {
  margin-bottom: 16px;
}

.modal-actions {
  margin-top: 20px;
  display: flex;
  justify-content: flex-end;
  gap: 10px;
}
